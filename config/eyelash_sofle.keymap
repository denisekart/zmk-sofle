#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>


&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&sk {
    release-after-ms = <1000>;
    quick-release;
};

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };


    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
        };

        combo_ctrl {
            bindings = <&sk LCTRL>;
            key-positions = <26 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        /* =====================================================================
        * LAYER0 — Base
        *
        * [ Esc  ] [ 1    ] [ 2    ] [ 3    ] [ 4    ] [ 5    ]       [  ^   ]        [ 6    ] [ 7    ] [ 8    ] [ 9    ] [ 0    ] [ Bksp ]
        * [ Tab  ] [ Q    ] [ W    ] [ E    ] [ R    ] [ T    ]       [  v   ]        [ Y    ] [ U    ] [ I    ] [ O    ] [ P    ] [  \   ]
        * [ Ctrl ] [ A    ] [ S    ] [ D    ] [ F    ] [ G    ]       [  <   ]        [ H    ] [ J    ] [ K    ] [ L    ] [  ;   ] [  '   ]
        * [ LShft] [ Z    ] [ X    ] [ C    ] [ V    ] [ B    ]       [  >   ]        [ N    ] [ M    ] [  ,   ] [  .   ] [  /   ] [ RShft]
        * [ Mute ] [ Ctrl ] [ GUI  ] [ Alt  ] [ MO1  ] [ Space]       [ Enter]        [ Enter]  [ MO2  ] [ Del  ] [ RAlt ] [ RCtrl]
        *
        * ===================================================================== */

        layer0 {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7                  &kp N8     &kp N9               &kp N0          &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U                   &kp I      &kp O                &kp P           &kp BSLH
&kp LSHFT   &kp A      &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J                   &kp K      &kp L                &kp SEMI        &kp APOS
&sk LSHFT   &kp Z      &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M                   &kp COMMA  &kp DOT              &kp QUESTION    &sk RSHFT
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp SPACE    &kp ENTER        &kp ENTER  &lt 2 LC(BACKSPACE)      &kp BACKSPACE &kp RIGHT_ALT    &kp RCTRL
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "BASE";
        };

        /* =====================================================================
        * LAYER1 — Nav / Mouse / Editing / RGB
        *
        * [  `   ] [ F1   ] [ F2   ] [ F3   ] [ F4   ] [ F5   ]       [ MUp  ]       [ F6   ] [ F7   ] [ F8   ] [ F9   ] [ F10  ] [ BKSP WORD ]
        * [ TRNS ] [  `   ] [ Home ] [  Up  ] [ End  ] [  (   ]       [ MDn  ]       [  )   ] [ Home ] [  Up  ] [ End  ] [  -   ] [  =   ]
        * [ Caps ] [  ~   ] [ Left ] [ Down ] [ Right] [  {   ]       [ MLt  ]       [  }   ] [ Left ] [ Down ] [ Right] [  [   ] [  ]   ]
        * [ TRNS ] [ Snip ] [ Cut  ] [ Copy ] [ Paste] [ LBKT ]       [ MRt  ]       [ RBkt ] [  <   ] [ F11  ] [ F12  ] [  >   ] [ TRNS ]
        * [ Mute ] [ TRNS ] [ TRNS ] [ TRNS ] [ TRNS ] [ TRNS ]       [ LClk ]       [ TRNS ] [ TRNS ] [ TRNS ] [ TRNS ] [ TRNS ]
        *
        * ===================================================================== */
        layer_1 {
            bindings = <
&kp GRAVE       &kp F1           &kp F2             &kp F3             &kp F4               &kp F5                  &mmv MOVE_UP            &kp F6           &kp F7           &kp F8                &kp F9     &kp F10           &kp DELETE
&LS(TAB)        &kp LC(Y)        &kp LC(LA(LEFT))   &kp UP             &kp LC(LA(RIGHT))    &td2 LPAR LBKT          &mmv MOVE_DOWN          &td2 RPAR RBKT         &kp LC(LEFT)         &kp UP                &kp LC(RIGHT)    &kp MINUS         &kp PLUS
&trans          &kp LC(A)        &kp LC(LEFT)       &kp DOWN           &kp LC(RIGHT)        &td2 LBRC LT            &mmv MOVE_LEFT          &td2 RBRC GT         &kp LEFT         &kp DOWN              &kp RIGHT  &kp UNDER          &kp EQUAL
&trans          &kp LC(Z)    &kp LC(X)          &kp LC(C)          &kp LC(V)            &kp FSLH                &mmv MOVE_RIGHT         &kp BSLH         &kp LG(LS(S))           &kp F11               &kp F12     &kp STAR            &trans
&kp C_MUTE      &trans           &trans             &trans             &trans               &trans                  &mkp LCLK               &trans           &trans           &trans     &trans     &trans
            >;

            display-name = "LOWER";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        /* =====================================================================
        * LAYER2 — Bluetooth / Output / System / RGB
        *
        * [  ~   ] [ BT0  ] [ BT1  ] [ BT2  ] [ BT3  ] [ BT4  ]       [ MUp  ]        [ RGB+ ] [ RGB- ] [ None ] [ BT clr ]  [ None ] [ TRNS ]
        * [ TRNS ] [ None ] [ None ] [ None ] [ None ] [ None ]       [ MDn  ]        [ Sp+  ] [ Sp-  ] [ None ] [ Out BT ]  [ None ] [ None ]
        * [ TRNS ] [ None ] [ š/Š  ] [ đ/Đ  ] [ None ] [ RGBOn]       [ MLt  ]        [ Br+  ] [ Br-  ] [ None ] [ Out USB ] [ None ] [ None ]
        * [ TRNS ] [ ž/Ž  ] [ None ] [ č/Č  ] [ None ] [ RGBOf]       [ MRt  ]        [ None ] [ None ] [ Reset] [ SoftO]    [ Boot ] [ NUM LCK ]
        * [ TRNS ] [ TRNS ] [ TRNS ] [ TRNS ] [ TRNS ] [ TRNS ]       [ LClk ]        [ TRNS ] [ TRNS ] [ TRNS ] [ TRNS ]    [ TRNS ]
        *
        * ===================================================================== */
        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &mmv MOVE_UP     &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &none       &bt BT_CLR      &none        &trans
&trans     &none         &none          &none         &none          &none           &mmv MOVE_DOWN   &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &none       &out OUT_BLE    &rgb_ug RGB_COLOR_HSB(270,40,100)       &rgb_ug RGB_COLOR_HSB(0,100,100)
&kp CAPS   &none         &none          &none         &none          &none           &mmv MOVE_LEFT   &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none       &out OUT_USB    &rgb_ug RGB_COLOR_HSB(240,30,100)       &rgb_ug RGB_COLOR_HSB(0,0,100)
&trans     &none        &none           &none         &none          &none           &mmv MOVE_RIGHT  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &none       &none           &rgb_ug RGB_COLOR_HSB(10,50,100)       &rgb_ug RGB_COLOR_HSB(45,75,100)
&trans     &trans        &trans         &trans        &trans         &trans          &mkp LCLK        &trans           &trans           &trans      &trans          &rgb_ug RGB_TOG
            >;

            display-name = "RAISE";
            sensor-bindings = <&scroll_encoder>;
        };

    };
};
